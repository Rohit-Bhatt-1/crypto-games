{"version":3,"sources":["redux/reducers/rootReducer.js","redux/reducers/tempReducer.js","utils/constants.js","components/IfLoggedIn/IfLoggedIn.js","components/IfGuest/IfGuest.js","redux/actionCreator/authActionCreator/authActionCreator.js","components/Header/Header.js","components/Home/Home.js","components/Main/Main.js","App.js","index.js"],"names":["combineReducers","tempReducer","accessToken","IfLoggedIn","children","localStorage","getItem","IfGuest","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","addScope","auth","getAuth","authActionCreator","a","signInWithPopup","data","user","setItem","type","Header","useState","isLoggedIn","setIsLoggedIn","dispatch","useDispatch","history","useHistory","Navbar","collapseOnSelect","expand","bg","variant","to","className","Toggle","aria-controls","Collapse","id","Nav","Link","onClick","clear","push","src","alt","Home","Main","middlewares","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAGeA,gCAAgB,CAC3BC,YCHW,WACX,OAAO,K,uECFEC,EAAc,c,OCQZC,MALf,YAAmC,IAAbC,EAAY,EAAZA,SACpB,OAA0C,OAAtCC,aAAaC,QAAQJ,GAA8BE,EAChD,8BCGMG,MALf,YAAgC,IAAbH,EAAY,EAAZA,SACjB,OAA0C,OAAtCC,aAAaC,QAAQJ,GAA8BE,EAChD,8B,8BCDTI,EAASC,cAAc,CACrBC,OAAQC,0CACRC,WAAYD,oCACZE,UAAWF,oBACXG,cAAeH,gCACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,iBAGjB,IAAMO,EAAW,IAAIC,IACrBD,EAASE,SAAS,gDAClB,IAAMC,EAAOC,cASEC,EAPQ,uCAAG,8BAAAC,EAAA,sEACLC,YAAgBJ,EAAMH,GADjB,cAClBQ,EADkB,OAElBC,EAAOD,EAAKC,KAClBtB,aAAauB,QAAQ1B,EAAayB,EAAKzB,aAHf,kBAIjB,CAAE2B,KAAM,UAJS,2CAAH,qDCRR,SAASC,IAAU,IAAD,EACKC,oBAAS,GADd,mBACxBC,EADwB,KACZC,EADY,KAEzBC,EAAWC,cACXC,EAAUC,cAiBhB,OACE,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAvD,UACE,cAAC,IAAD,CAASC,GAAG,IAAIC,UAAU,kCAA1B,yBAGA,cAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,eAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,wBAApB,UACE,cAACC,EAAA,EAAD,CAAKL,UAAU,YACf,eAACK,EAAA,EAAD,WACE,cAAC,EAAD,UACE,cAACA,EAAA,EAAIC,KAAL,CAAUN,UAAU,WAAWO,QAf1B,WACb9C,aAAa+C,QACbnB,GAAc,IAaN,sBAIF,cAAC,EAAD,UACE,eAACgB,EAAA,EAAIC,KAAL,CAAUN,UAAU,WAAWO,QA9B3B,WACPnB,GACH,sBAAC,sBAAAR,EAAA,kEACCU,EADD,SACgBX,IADhB,kCAECU,GAAc,GACdG,EAAQiB,KAAK,SAHd,0CAAD,IA4BM,uBACa,IACX,qBACEC,IAAI,qHACJC,IAAI,SACJX,UAAU,uBC5CXY,MAJf,WACE,OAAO,wCCQM,SAASC,IACtB,IAAMC,EAAc,CAACC,KACfC,EAAQC,sBACZC,EACAC,8BAAoBC,kBAAe,WAAf,EAAmBN,KAEzC,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAUE,MAAOA,EAAjB,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,QAAZ,SACE,wCAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cChBGC,MARf,WACE,OACE,8BACE,cAACT,EAAD,OCDNU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d9ebfc3a.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport tempReducer from \"./tempReducer\";\r\n\r\nexport default combineReducers({\r\n    tempReducer\r\n});","\r\nexport default function tempReducer() {\r\n    return true;\r\n}\r\n","export const accessToken = \"accessToken\";\r\n","import React from \"react\";\r\nimport { accessToken } from \"../../utils/constants\";\r\n\r\nfunction IfLoggedIn({ children }) {\r\n  if (localStorage.getItem(accessToken) !== null) return children;\r\n  return <></>;\r\n}\r\n\r\nexport default IfLoggedIn;\r\n","import React from \"react\";\r\nimport { accessToken } from \"../../utils/constants\";\r\n\r\nfunction IfGuest({ children }) {\r\n  if (localStorage.getItem(accessToken) === null) return children;\r\n  return <></>;\r\n}\r\n\r\nexport default IfGuest;\r\n","import { GoogleAuthProvider, getAuth, signInWithPopup } from \"firebase/auth\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport { accessToken } from \"../../../utils/constants\";\r\n\r\nfirebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n});\r\n\r\nconst provider = new GoogleAuthProvider();\r\nprovider.addScope(\"https://rohit-bhatt-1.github.io/crypto-games\");\r\nconst auth = getAuth();\r\n\r\nconst authActionCreator = async () => {\r\n  const data = await signInWithPopup(auth, provider);\r\n  const user = data.user;\r\n  localStorage.setItem(accessToken, user.accessToken);\r\n  return { type: \"HELLO\" };\r\n};\r\n\r\nexport default authActionCreator;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IfLoggedIn from \"../IfLoggedIn/IfLoggedIn\";\r\nimport IfGuest from \"../IfGuest/IfGuest\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./Header.css\";\r\nimport authActionCreator from \"../../redux/actionCreator/authActionCreator/authActionCreator\";\r\n\r\nexport default function Header() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const login = () => {\r\n    if (!isLoggedIn) {\r\n      (async () => {\r\n        dispatch(await authActionCreator());\r\n        setIsLoggedIn(true);\r\n        history.push(\"/test\");\r\n      })();\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <NavLink to=\"/\" className=\"navbar-brand hover-overlay ps-2\">\r\n        Bear & Bull\r\n      </NavLink>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"me-auto\"></Nav>\r\n        <Nav>\r\n          <IfLoggedIn>\r\n            <Nav.Link className=\"nav-link\" onClick={logout}>\r\n              Logout\r\n            </Nav.Link>\r\n          </IfLoggedIn>\r\n          <IfGuest>\r\n            <Nav.Link className=\"nav-link\" onClick={login}>\r\n              Login with{\" \"}\r\n              <img\r\n                src=\"https://www.freepnglogos.com/uploads/google-logo-png/google-logo-icon-png-transparent-background-osteopathy-16.png\"\r\n                alt=\"Google\"\r\n                className=\"logo\"\r\n              />\r\n            </Nav.Link>\r\n          </IfGuest>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  return <div>Home</div>;\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport rootReducer from \"../../redux/reducers/rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport Header from \"../Header/Header\";\r\nimport { Provider } from \"react-redux\";\r\nimport Home from \"../Home/Home\";\r\nimport { Route, Switch } from \"react-router\";\r\n\r\nexport default function Main() {\r\n  const middlewares = [thunk];\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(...middlewares))\r\n  );\r\n  return (\r\n    <Router>\r\n      <Provider store={store}>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/test\">\r\n            <h1>test</h1>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Provider>\r\n    </Router>\r\n  );\r\n}\r\n","import Main from \"./components/Main/Main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}